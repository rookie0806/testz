{"ast":null,"code":"const SET_DATA = \"SET_DATA\";\nconst SET_TEXT = \"SET_TEXT\";\nconst SET_XY = \"SET_XY\";\n\nfunction setDATA(data) {\n  return {\n    type: SET_DATA,\n    data\n  };\n}\n\nfunction setTEXT(text) {\n  return {\n    type: SET_TEXT,\n    text\n  };\n}\n\nfunction setXY(data) {\n  return {\n    type: SET_XY,\n    data\n  };\n} // API Actions\n\n\nfunction getDATA() {\n  return (dispatch, getState) => {\n    fetch(\"/crawl/getData/\", {}).then(response => {\n      return response.json();\n    }).then(json => {\n      dispatch(setDATA(json));\n    }).catch(err => console.log(err));\n  };\n}\n\nfunction getTEXT() {\n  return (dispatch, getState) => {\n    fetch(\"/crawl/getToWrite/\", {}).then(response => {\n      return response.json();\n    }).then(json => {\n      dispatch(setTEXT(json));\n    }).catch(err => console.log(err));\n  };\n}\n\nfunction getCookie(cookieName) {\n  var cookieValue = null;\n\n  if (document.cookie) {\n    var array = document.cookie.split(escape(cookieName) + '=');\n\n    if (array.length >= 2) {\n      var arraySub = array[1].split(';');\n      cookieValue = unescape(arraySub[0]);\n    }\n  }\n\n  return cookieValue;\n}\n\nfunction postXY(data) {\n  var csrftoken = getCookie('csrftoken');\n  console.log(csrftoken);\n  return (dispatch, getState) => {\n    fetch(`/crawl/setsoheeXY/`, {\n      method: \"POST\",\n      headers: {\n        'X-CSRFTOKEN': csrftoken,\n        'Content-Type': 'application/json; charset=UTF-8'\n      },\n      body: {\n        data: data\n      }\n    }).then(response => {\n      return response.json();\n    }).then(json => {\n      if (json.message) {\n        console.log(json.message);\n      }\n    });\n  };\n} // Initial State\n\n\nconst initialState = {}; // Reducer\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_DATA:\n      return applySetDATA(state, action);\n\n    case SET_TEXT:\n      return applySetTEXT(state, action);\n\n    case SET_XY:\n      return applySetXY(state, action);\n\n    default:\n      return state;\n  }\n} // Reducer Functions\n\n\nfunction applySetDATA(state, action) {\n  const {\n    data\n  } = action;\n  return { ...state,\n    data\n  };\n}\n\nfunction applySetTEXT(state, action) {\n  const {\n    text\n  } = action;\n  return { ...state,\n    text\n  };\n}\n\nfunction applySetXY(state, action) {\n  const {\n    data\n  } = action;\n  return { ...state,\n    data\n  };\n}\n\nconst actionCreators = {\n  getDATA,\n  getTEXT,\n  postXY\n};\nexport { actionCreators }; // Export reducer by default\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/devgu/sohee/sohee/frontend/src/redux/modules/data.js"],"names":["SET_DATA","SET_TEXT","SET_XY","setDATA","data","type","setTEXT","text","setXY","getDATA","dispatch","getState","fetch","then","response","json","catch","err","console","log","getTEXT","getCookie","cookieName","cookieValue","document","cookie","array","split","escape","length","arraySub","unescape","postXY","csrftoken","method","headers","body","message","initialState","reducer","state","action","applySetDATA","applySetTEXT","applySetXY","actionCreators"],"mappings":"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","sourcesContent":["const SET_DATA = \"SET_DATA\";\r\nconst SET_TEXT = \"SET_TEXT\";\r\nconst SET_XY = \"SET_XY\";\r\nfunction setDATA(data) {\r\n  return {\r\n    type: SET_DATA,\r\n    data\r\n  };\r\n}\r\nfunction setTEXT(text) {\r\n  return {\r\n    type: SET_TEXT,\r\n    text\r\n  };\r\n}\r\nfunction setXY(data) {\r\n  return {\r\n    type: SET_XY,\r\n    data\r\n  };\r\n}\r\n// API Actions\r\nfunction getDATA() {\r\n  return (dispatch, getState) => {\r\n    fetch(\"/crawl/getData/\", {\r\n    })\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(json => {\r\n        \r\n        dispatch(setDATA(json));\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n}\r\nfunction getTEXT() {\r\n  return (dispatch, getState) => {\r\n    fetch(\"/crawl/getToWrite/\", {\r\n    })\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(json => {\r\n        \r\n        dispatch(setTEXT(json));\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n}\r\nfunction getCookie(cookieName){\r\n  var cookieValue=null;\r\n  if(document.cookie){\r\n      var array=document.cookie.split((escape(cookieName)+'='));\r\n      if(array.length >= 2){\r\n          var arraySub=array[1].split(';');\r\n          cookieValue=unescape(arraySub[0]);\r\n      }\r\n  }\r\n  return cookieValue;\r\n}\r\nfunction postXY(data) {\r\n  var csrftoken = getCookie('csrftoken');\r\n  console.log(csrftoken);\r\n  return (dispatch, getState) => {\r\n\r\n    fetch(`/crawl/setsoheeXY/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        'X-CSRFTOKEN': csrftoken,\r\n        'Content-Type': 'application/json; charset=UTF-8',\r\n        \r\n      },\r\n      body: {\r\n        data : data\r\n      }\r\n    })\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(json => {\r\n        if (json.message) {\r\n          console.log(json.message)\r\n        }\r\n      });\r\n  };\r\n}\r\n// Initial State\r\n\r\nconst initialState = {};\r\n\r\n// Reducer\r\n\r\nfunction reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_DATA:\r\n      return applySetDATA(state, action);\r\n    case SET_TEXT:\r\n        return applySetTEXT(state, action);\r\n    case SET_XY:\r\n      return applySetXY(state, action)\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n// Reducer Functions\r\n\r\nfunction applySetDATA(state, action) {\r\n  const { data } = action;\r\n  return {\r\n    ...state,\r\n    data\r\n  };\r\n}\r\nfunction applySetTEXT(state, action) {\r\n  const { text } = action;\r\n  return {\r\n    ...state,\r\n    text\r\n  };\r\n}\r\nfunction applySetXY(state, action) {\r\n  const { data } = action;\r\n  return {\r\n    ...state,\r\n    data\r\n  };\r\n}\r\nconst actionCreators = {\r\n  getDATA,\r\n  getTEXT,\r\n  postXY,\r\n};\r\n\r\nexport { actionCreators };\r\n\r\n// Export reducer by default\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}