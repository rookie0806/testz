{"ast":null,"code":"import _objectSpread from\"C:/Users/devgu/sohee/sohee/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var SET_DATA=\"SET_DATA\";var SET_TEXT=\"SET_TEXT\";function setDATA(data){return{type:SET_DATA,data:data};}function setTEXT(text){return{type:SET_TEXT,text:text};}// API Actions\nfunction getDATA(){return function(dispatch,getState){fetch(\"/crawl/getData/\",{}).then(function(response){return response.json();}).then(function(json){dispatch(setDATA(json));}).catch(function(err){return console.log(err);});};}function getTEXT(){return function(dispatch,getState){fetch(\"/crawl/getToWrite/\",{}).then(function(response){return response.json();}).then(function(json){dispatch(setTEXT(json));}).catch(function(err){return console.log(err);});};}// Initial State\nvar initialState={};// Reducer\nfunction reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_DATA:return applySetDATA(state,action);case SET_TEXT:return applySetTEXT(state,action);default:return state;}}// Reducer Functions\nfunction applySetDATA(state,action){var data=action.data;return _objectSpread(_objectSpread({},state),{},{data:data});}function applySetTEXT(state,action){var text=action.text;return _objectSpread(_objectSpread({},state),{},{text:text});}var actionCreators={getDATA:getDATA,getTEXT:getTEXT};export{actionCreators};// Export reducer by default\nexport default reducer;","map":{"version":3,"sources":["C:/Users/devgu/sohee/sohee/frontend/src/redux/modules/data.js"],"names":["SET_DATA","SET_TEXT","setDATA","data","type","setTEXT","text","getDATA","dispatch","getState","fetch","then","response","json","catch","err","console","log","getTEXT","initialState","reducer","state","action","applySetDATA","applySetTEXT","actionCreators"],"mappings":"yJAAA,GAAMA,CAAAA,QAAQ,CAAG,UAAjB,CACA,GAAMC,CAAAA,QAAQ,CAAG,UAAjB,CACA,QAASC,CAAAA,OAAT,CAAiBC,IAAjB,CAAuB,CACrB,MAAO,CACLC,IAAI,CAAEJ,QADD,CAELG,IAAI,CAAJA,IAFK,CAAP,CAID,CACD,QAASE,CAAAA,OAAT,CAAiBC,IAAjB,CAAuB,CACrB,MAAO,CACLF,IAAI,CAAEH,QADD,CAELK,IAAI,CAAJA,IAFK,CAAP,CAID,CACD;AACA,QAASC,CAAAA,OAAT,EAAmB,CACjB,MAAO,UAACC,QAAD,CAAWC,QAAX,CAAwB,CAC7BC,KAAK,CAAC,iBAAD,CAAoB,EAApB,CAAL,CAEGC,IAFH,CAEQ,SAAAC,QAAQ,CAAI,CAChB,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACD,CAJH,EAKGF,IALH,CAKQ,SAAAE,IAAI,CAAI,CAEZL,QAAQ,CAACN,OAAO,CAACW,IAAD,CAAR,CAAR,CACD,CARH,EASGC,KATH,CASS,SAAAC,GAAG,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ,EATZ,EAUD,CAXD,CAYD,CACD,QAASG,CAAAA,OAAT,EAAmB,CACjB,MAAO,UAACV,QAAD,CAAWC,QAAX,CAAwB,CAC7BC,KAAK,CAAC,oBAAD,CAAuB,EAAvB,CAAL,CAEGC,IAFH,CAEQ,SAAAC,QAAQ,CAAI,CAChB,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACD,CAJH,EAKGF,IALH,CAKQ,SAAAE,IAAI,CAAI,CAEZL,QAAQ,CAACH,OAAO,CAACQ,IAAD,CAAR,CAAR,CACD,CARH,EASGC,KATH,CASS,SAAAC,GAAG,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ,EATZ,EAUD,CAXD,CAYD,CACD;AAEA,GAAMI,CAAAA,YAAY,CAAG,EAArB,CAEA;AAEA,QAASC,CAAAA,OAAT,EAA+C,IAA9BC,CAAAA,KAA8B,2DAAtBF,YAAsB,IAARG,CAAAA,MAAQ,2CAC7C,OAAQA,MAAM,CAAClB,IAAf,EACE,IAAKJ,CAAAA,QAAL,CACE,MAAOuB,CAAAA,YAAY,CAACF,KAAD,CAAQC,MAAR,CAAnB,CACF,IAAKrB,CAAAA,QAAL,CACI,MAAOuB,CAAAA,YAAY,CAACH,KAAD,CAAQC,MAAR,CAAnB,CACJ,QACE,MAAOD,CAAAA,KAAP,CANJ,CAQD,CACD;AAEA,QAASE,CAAAA,YAAT,CAAsBF,KAAtB,CAA6BC,MAA7B,CAAqC,CACnC,GAAQnB,CAAAA,IAAR,CAAiBmB,MAAjB,CAAQnB,IAAR,CACA,sCACKkB,KADL,MAEElB,IAAI,CAAJA,IAFF,GAID,CACD,QAASqB,CAAAA,YAAT,CAAsBH,KAAtB,CAA6BC,MAA7B,CAAqC,CACnC,GAAQhB,CAAAA,IAAR,CAAiBgB,MAAjB,CAAQhB,IAAR,CACA,sCACKe,KADL,MAEEf,IAAI,CAAJA,IAFF,GAID,CACD,GAAMmB,CAAAA,cAAc,CAAG,CACrBlB,OAAO,CAAPA,OADqB,CAErBW,OAAO,CAAPA,OAFqB,CAAvB,CAKA,OAASO,cAAT,EAEA;AAEA,cAAeL,CAAAA,OAAf","sourcesContent":["const SET_DATA = \"SET_DATA\";\r\nconst SET_TEXT = \"SET_TEXT\";\r\nfunction setDATA(data) {\r\n  return {\r\n    type: SET_DATA,\r\n    data\r\n  };\r\n}\r\nfunction setTEXT(text) {\r\n  return {\r\n    type: SET_TEXT,\r\n    text\r\n  };\r\n}\r\n// API Actions\r\nfunction getDATA() {\r\n  return (dispatch, getState) => {\r\n    fetch(\"/crawl/getData/\", {\r\n    })\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(json => {\r\n        \r\n        dispatch(setDATA(json));\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n}\r\nfunction getTEXT() {\r\n  return (dispatch, getState) => {\r\n    fetch(\"/crawl/getToWrite/\", {\r\n    })\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(json => {\r\n        \r\n        dispatch(setTEXT(json));\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n}\r\n// Initial State\r\n\r\nconst initialState = {};\r\n\r\n// Reducer\r\n\r\nfunction reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_DATA:\r\n      return applySetDATA(state, action);\r\n    case SET_TEXT:\r\n        return applySetTEXT(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n// Reducer Functions\r\n\r\nfunction applySetDATA(state, action) {\r\n  const { data } = action;\r\n  return {\r\n    ...state,\r\n    data\r\n  };\r\n}\r\nfunction applySetTEXT(state, action) {\r\n  const { text } = action;\r\n  return {\r\n    ...state,\r\n    text\r\n  };\r\n}\r\nconst actionCreators = {\r\n  getDATA,\r\n  getTEXT\r\n};\r\n\r\nexport { actionCreators };\r\n\r\n// Export reducer by default\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}